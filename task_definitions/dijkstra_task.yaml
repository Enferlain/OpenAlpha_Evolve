# task_definitions/dijkstra_task.yaml

id: "dijkstra_from_yaml_v1" # Unique ID for this task configuration
description: > # The '>' allows for multi-line strings, nice for descriptions!
  Implement Dijkstra's algorithm to find the shortest paths from a source node 
  to all other nodes in a weighted graph. The graph is represented as an 
  adjacency list where keys are node IDs and values are dictionaries of 
  neighbor_node: weight. The function should take the graph and the source 
  node as input and return a dictionary of node: shortest_distance_from_source. 
  Use float('inf') for unreachable nodes.

evolve_function: "dijkstra"

io_examples:
  - input:
      graph:
        0: {1: 4, 7: 8}
        1: {0: 4, 2: 8, 7: 11}
        2: {1: 8, 3: 7, 8: 2, 5: 4}
        3: {2: 7, 4: 9, 5: 14}
        4: {3: 9, 5: 10}
        5: {2: 4, 3: 14, 4: 10, 6: 2}
        6: {5: 2, 7: 1, 8: 6}
        7: {0: 8, 1: 11, 6: 1}
        8: {2: 2, 6: 6, 7: 7}
      source_node: 0
    output: {0: 0, 1: 4, 2: 12, 3: 19, 4: 21, 5: 11, 6: 9, 7: 8, 8: 14}

  - input:
      graph:
        0: {1: 10}
        1: {0: 10}
        2: {3: 5}
        3: {2: 5}
      source_node: 0
    output: {0: 0, 1: 10, 2: .inf, 3: .inf} # YAML standard for float('inf')

  - input:
      graph: {0: {}}
      source_node: 0
    output: {0: 0}

allowed_imports:
  - "heapq"
  - "sys"
  - "math" # For float('inf') if used directly in generated code, though .inf in YAML handles it for I/O

# improvement_mode can remain commented out to default to "task_focused"
improvement_mode: "task_focused"

primary_focus_metrics:
  - "ruff_violations"
  - "cyclomatic_complexity_avg"
  - "maintainability_index"

evaluation_criteria: "Correctness against all test cases using float('inf') for unreachable nodes is the primary goal. Efficiency is secondary."

# For a "general_refinement" task, you would add:
# initial_seed_code_path: "path/to/your_code_to_refine.py"
# primary_focus_metrics: ["pylint_score", "cyclomatic_complexity_avg"]
# refine_goals: "Make the code more Pythonic and improve its Pylint rating."